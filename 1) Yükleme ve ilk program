https://www.rust-lang.org/
Yükleme işlemini uzun uzadıya anlatmaya gerek yok siteye girip yönergeleri takip etmek yeterli.

Yükleme işlemi tamamlandıktan sonra cmd'ye
$ rustc --version
Yazarak yükleme işlemi başarılı mı kontrol edebiliriz.

Yeni versiyonlara güncelleme yapmak için cmd'ye
$ rustup update
yazılabilir.

Silme gafletine düşersekte cmd'ye
$ rustup self uninstall
yazmak yeterli :)

Rustun ingilizce dökümantasyonunu local olarak açmak için cmd'ye
$ rustup doc
yazılabilir.

# Merhaba Rust! yazan program geliştirelim.
bir text dosyası açıp içerisine aşağıdaki kodu yazdım.
fn main() {
    println!("Merhaba Rust!");
}
ve dosyayı .txt yerine .rs uzantısı ile kaydettim.
Sonra konsoldan rustc main.rs yazarak compile ettim. main.exe dosyasını oluşturdu. main.exeyi konsoldan çalıştırınca Merhaba Rust yazısını gördüm.
Not: println! deki ! işareti println fonksiyonunu değil println makrosunu çağırdığımızı sembolize eder. Yani fonksiyon çağırsaydık ! olmayacaktı.

# Merhaba Cargo
Cargo rust'un paket yükleme ve sistem kurma platformu. Pythonun pip'ine göre daha gelişmiş. merhaba rust projemiz gibi küçük çaplı projelerde pek lazım olmasa da
aslında büyük projelerde başından itibaren çok kullanılır. cargo rust'u yüklediğinizde otomatik olarak kurulur. Görmek için cmd'ye
$ cargo --version
yazabiliriz.

$ cargo new hello_cargo
komutu ile hello_cargo dizini oluşturup içerisinde proje dosyalarımızı oluşturduk. dikkat edilirse toml uzantılı bir dosya var ve text editöründe açılınca projenin adı
versiyonu, bağımlılıkları gibi bilgileri tutuyor. src dosyasının içinde ise main.rs dosyamız var ve içinde merhaba dünya kodları hazır olarak geliyor.
Bunu çalıştırmak için 
$ cargo build
komutu ile build ettikten sonra gelen yeni dosyalar içerisinde şu yoldan exe dosyamıza ulaşabiliriz: .\target\debug\hello_cargo.exe
yada basitçe
$ cargo run
komutu ile de programı çalıştırabiliriz.


